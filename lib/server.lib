#!/bin/bash

todo()
{
  echo "TODO: Function $1"
}

register()
{
  RETURN=1

  sudo groupadd $STUDENT_GROUP > /dev/null 2>&1 #make sure group is created before

  while [ $RETURN != 0 ]
    do
      read -p "Your student ID (e.x. $STUDENT_ID)[ 0 means quit ]:" ID
    if [ ${ID:-0} == 0 ]; then
      exit
    fi

    if [[ ! $ID =~ $STUDENT_PATTERN ]] || [ ${#ID} != ${#STUDENT_ID} ]; then
      echo "The account you chosen is invalid, please try again!"
      continue
    fi

    grep $ID /etc/passwd > /dev/null 2>&1
    if [ $? == 0 ]; then
      echo "The ID you input have already been created, please contact the teacher!"
      read
      exit
    fi
    sudo useradd -s /opt/linuxer/bin/server-students.bash -g $STUDENT_GROUP -m $ID > /dev/null 2>&1
    RETURN=$?
    if [ $RETURN != 0 ]; then
      echo "The account you chosen cannot been created, please contact your
      administrator!"
      exit
    fi
  done

  trap "userdel -r $ID; trap - SIGINT SIGTERM; stty echo; exit" SIGINT SIGTERM
  echo "Set password for your account:"
  if ! sudo passwd $ID
    then
      sudo userdel -r $ID
  fi

  clear
  echo
  echo
  echo
  echo "===================================================="
  echo "Congratulation! Your account $ID is setup. "
  echo "Please login again using your account $ID. "
  echo "===================================================="
  read

}


# adapted from 唐欣（信安1405班，5120144789）and
# 曾林生（信安1405班，5120142898） 
# 2016/12/07
checkscore()
{
  SCORES=`ls ${SCORE_DIR}`

  if [ ! -z "$SCORES" ]
    then
      echo $SCORES
      read -p "Input name of experiment:" LAB
    fi
  LAB=${LAB##*/}
  DIRFULL="$SCORE_DIR/$LAB"

  if [ ! -f $DIRFULL ]
    then
      read -p "The experient is not marked yet."
      return 1
    else 
      score=`cat $DIRFULL | grep "^${USER}" | while IFS="," read v1 v2 v3 v4
      do
        echo "ID: $v1"
        echo "Score: $v2"
        echo "Marker: $v3" 
        echo "Date: $v4"
      done`
      if [ ! -z "$score" ]
        then
          read -p "$score"
        else
          read -p "Your score has been not checked.Please wait."
      fi
  fi
}

# for teacher
listscore()
{
  SCORES=`ls ${SCORE_DIR}`

  LAB=1
  while [ ! -z "$SCORES" -a "$LAB" != 0 ]
    do
      echo $SCORES
      read -p "Input name of experiment:(0: quit)" LAB
      
      LAB=${LAB##*/}
      DIRFULL="$SCORE_DIR/$LAB"

      if [ -f $DIRFULL ]
        then
         cat $DIRFULL | sed -re 's/,/\t|/g;' | column -t | less 
      fi
    done
}
