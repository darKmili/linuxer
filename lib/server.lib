#!/bin/bash

todo()
{
  echo "TODO: Function $1"
}

register()
{
  RETURN=1

  sudo groupadd $STUDENT_GROUP > /dev/null 2>&1 #make sure group is created before

  while [ $RETURN != 0 ]
    do
      read -p "Your student ID (e.x. $STUDENT_ID)[ 0 means quit ]:" ID
    if [ ${ID:-0} == 0 ]; then
      exit
    fi

    if [[ ! $ID =~ $STUDENT_PATTERN ]] || [ ${#ID} != ${#STUDENT_ID} ]; then
      echo "The account you chosen is invalid, please try again!"
      continue
    fi

    grep $ID /etc/passwd > /dev/null 2>&1
    if [ $? == 0 ]; then
      echo "The ID you input have already been created, please contact the teacher!"
      read
      exit
    fi
    sudo useradd -s /opt/linuxer/bin/server-students.bash -g $STUDENT_GROUP -m $ID > /dev/null 2>&1
    RETURN=$?
    if [ $RETURN != 0 ]; then
      echo "The account you chosen cannot been created, please contact your
      administrator!"
      exit
    fi
  done

  trap "userdel -r $ID; trap - SIGINT SIGTERM; stty echo; exit" SIGINT SIGTERM
  echo "Set password for your account:"
  if ! sudo passwd $ID
    then
      sudo userdel -r $ID
  fi

  clear
  echo
  echo
  echo
  echo "===================================================="
  echo "Congratulation! Your account $ID is setup. "
  echo "Please login again using your account $ID. "
  echo "===================================================="
  read

}


# adapted from 唐欣（信安1405班，5120144789）and
# 曾林生（信安1405班，5120142898） 
# 2016/12/07
checkscore()
{
  SCORES=`ls ${SCORE_DIR}`

  if [ ! -z "$SCORES" ]
    then
      echo $SCORES
      read -p "Input name of experiment:" LAB
    fi
  LAB=${LAB##*/}
  DIRFULL="$SCORE_DIR/$LAB"

  if [ ! -f $DIRFULL ]
    then
      read -p "The experient is not marked yet."
      return 1
    else 
      score=`cat $DIRFULL | grep "^${USER}" | while IFS="," read v1 v2 v3 v4
      do
        echo "ID: $v1"
        echo "Score: $v2"
        echo "Marker: $v3" 
        echo "Date: $v4"
      done`
      if [ ! -z "$score" ]
        then
          read -p "$score"
        else
          read -p "Your score has been not checked.Please wait."
      fi
  fi
}

# for teacher
listscore()
{
  SCORES=`ls ${SCORE_DIR}`

  LAB=1
  while [ ! -z "$SCORES" -a "$LAB" != 0 ]
    do
      echo $SCORES
      read -p "Input name of experiment:(0: quit)" LAB
      
      LAB=${LAB##*/}
      DIRFULL="$SCORE_DIR/$LAB"

      if [ -f $DIRFULL ]
        then
         cat $DIRFULL | sed -re 's/,/\t|/g;' | column -t | less 
      fi
    done
}

# helper: search student's score
# printscore scorefile ID
printscore()
{
  if [ ! -z $1 -a -f $1 ]
   then
     SCORE=
     readscore $1 $2
     if [ ! -z "${SCORE}" ]
       then
         echo \($SCORE\)
     fi
  fi
}

# helper
# readscore ID scorefile
readscore()
{
  if [ ! -z $1 -a -f $1 ]
    then
     SCORE=$(grep ^$2 $1)
  fi
}

# helper
# startExp dir
startExp()
{
  test -z "$1" || opt="--notebook-dir=$1"
  jupyter notebook --allow-root "$opt" 
}

# for teacher
mark()
{
  # read lab for checking
  read -p "Input lab NUMBER for marking(1,2,3,...,etc.):" LAB

  test -z $LAB && exit 1
  # print list of students
  INDEX=1
  SCOREFILE=${SCORE_DIR}/lab${LAB}

  test -d "${SCORE_DIR}" || sudo mkdir ${SCORE_DIR}
  test -f ${SCOREFILE} || sudo touch ${SCOREFILE}
  
  for DIR in ${SUBMIT_DIR}/*
    do
      if [ -d ${DIR}/labs/lab${LAB} ]
        then
          SCORE=
          echo -n "$INDEX  "
          readscore $SCOREFILE ${DIR##*/}
          if [ ! -z "${SCORE}" ]
            then
              echo $SCORE
            else
              echo "${DIR##*/}"
            fi
          INDEX=$(($INDEX+1))
        fi
    done
  
  SCORE=

  # read start ID for checking
  read -p "Input start student ID for checking:" ID

  test -z $ID && exit 1
  # create exp and mount every student's submition
  START=1
  for DIR in ${SUBMIT_DIR}/*
    do
      if [ ! ${START} == 0 ]
        then
          if [ ${DIR##*/} == $ID ]
            then
              START=0
          fi
      fi
      if [ ${START} == 0 ]
        then
          if [ -d ${DIR}/labs/lab${LAB} ]
            then
              echo "=============Checking student ${DIR##*/} ==============="

              echo "Openning experiment environment, please wait ......"
              startExp ${DIR}/labs/lab${LAB} ${DIR##*/}

              # print score
              printscore $SCOREFILE ${DIR##*/}
              read -p "Mark this experiment (enter:skip, q:quit, i:input id): " INPUT
              if [ ! -z $INPUT ]
                then
                  if [ ! $INPUT = "q" -a ! $INPUT = "Q" ]
                    then
                      if [ ! $INPUT = "i" -a ! $INPUT = "I" ]
                        then
                          if grep -i ^${DIR##*/} ${SCOREFILE} >/dev/null 2>&1
                            then
                              echo "Marked, ignored"
                            else
                              sudo bash -c "echo ${DIR##*/},$INPUT,${USER},$(date) >> $SCOREFILE"
                          fi
                        else
                          # read start ID for checking
                          read -p "Input start student ID for checking:" ID
                          test -z $ID && break
                          # create exp and mount every student's submition
                          START=1
                      fi
                    else
                      break
                  fi
              fi
          fi
      fi
    done
}
